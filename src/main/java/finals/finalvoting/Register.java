/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package finals.finalvoting;

import DataFiles.LocationHandler;
import DataFiles.UserAccessObject;
import DataFiles.UserTransferObject;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.Color;
import java.sql.Date;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author REYMARK
 */
public class Register extends javax.swing.JFrame {

    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
        
        registerFirstNameField.setHint("First Name");
        registerLastNameField.setHint("Last Name");
        registerEmailField.setHint("Email");
        registerPasswordField.setHint("Password");
        registerConfirmPasswordField.setHint("Confirm Password");
        
        registerBirthdateChooser.setBackground(new Color(71, 74, 73));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registerMainPanel = new javax.swing.JPanel();
        birthdayLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        registerButton = new javax.swing.JButton();
        loginButton = new javax.swing.JButton();
        registerBirthdateChooser = new com.toedter.calendar.JDateChooser();
        registerGenderComboBox = new javax.swing.JComboBox<>();
        registerStatusComboBox = new javax.swing.JComboBox<>();
        showPasswordCheckBox = new javax.swing.JCheckBox();
        registerAddressBarangayCombox = new javax.swing.JComboBox<>();
        municipalityLabel = new javax.swing.JLabel();
        registerBarangayLabel = new javax.swing.JLabel();
        registerAddressCityTownCombox = new javax.swing.JComboBox<>();
        registerFirstNameField = new CustomTextField.MyTextField();
        registerLastNameField = new CustomTextField.MyTextField();
        registerEmailField = new CustomTextField.MyTextField();
        registerPasswordField = new CustomTextField.MyPasswordField();
        registerConfirmPasswordField = new CustomTextField.MyPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Voting System - Registration Form");
        setResizable(false);

        registerMainPanel.setBackground(new java.awt.Color(28, 33, 32));
        registerMainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        birthdayLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        birthdayLabel.setForeground(new java.awt.Color(255, 255, 255));
        birthdayLabel.setText("Birth Date:");
        registerMainPanel.add(birthdayLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 170, 30));

        genderLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        genderLabel.setForeground(new java.awt.Color(255, 255, 255));
        genderLabel.setText("Gender:");
        registerMainPanel.add(genderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, 170, 30));

        statusLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(255, 255, 255));
        statusLabel.setText("Civil Status:");
        registerMainPanel.add(statusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 170, 30));

        registerButton.setBackground(new java.awt.Color(255, 103, 103));
        registerButton.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        registerButton.setForeground(new java.awt.Color(255, 255, 255));
        registerButton.setText("Register");
        registerButton.setBorder(null);
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        registerMainPanel.add(registerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 680, 170, 40));

        loginButton.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        loginButton.setForeground(new java.awt.Color(28, 33, 32));
        loginButton.setText("Login");
        loginButton.setBorder(null);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        registerMainPanel.add(loginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 680, 170, 40));

        registerBirthdateChooser.setBackground(new java.awt.Color(71, 65, 73));
        registerBirthdateChooser.setForeground(new java.awt.Color(71, 65, 73));
        registerBirthdateChooser.setToolTipText("");
        registerBirthdateChooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                registerBirthdateChooserPropertyChange(evt);
            }
        });
        registerMainPanel.add(registerBirthdateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, 170, 40));

        registerGenderComboBox.setBackground(new java.awt.Color(71, 74, 73));
        registerGenderComboBox.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        registerGenderComboBox.setForeground(new java.awt.Color(255, 255, 255));
        registerGenderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Male", "Female", "Non-Binary" }));
        registerGenderComboBox.setBorder(null);
        registerMainPanel.add(registerGenderComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 170, 40));

        registerStatusComboBox.setBackground(new java.awt.Color(71, 74, 73));
        registerStatusComboBox.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        registerStatusComboBox.setForeground(new java.awt.Color(255, 255, 255));
        registerStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Single", "Married", "Divorced", "Separated", "Widowed" }));
        registerStatusComboBox.setBorder(null);
        registerStatusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerStatusComboBoxActionPerformed(evt);
            }
        });
        registerMainPanel.add(registerStatusComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 350, 170, 40));

        showPasswordCheckBox.setBackground(new java.awt.Color(28, 33, 32));
        showPasswordCheckBox.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        showPasswordCheckBox.setForeground(new java.awt.Color(255, 255, 255));
        showPasswordCheckBox.setText("Show Password");
        showPasswordCheckBox.setFocusable(false);
        showPasswordCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPasswordCheckBoxActionPerformed(evt);
            }
        });
        registerMainPanel.add(showPasswordCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 600, 130, -1));

        registerAddressBarangayCombox.setBackground(new java.awt.Color(71, 74, 73));
        registerAddressBarangayCombox.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        registerAddressBarangayCombox.setForeground(new java.awt.Color(255, 255, 255));
        registerAddressBarangayCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default" }));
        registerAddressBarangayCombox.setBorder(null);
        registerMainPanel.add(registerAddressBarangayCombox, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 430, 170, 40));

        municipalityLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        municipalityLabel.setForeground(new java.awt.Color(255, 255, 255));
        municipalityLabel.setText("Municipality:");
        registerMainPanel.add(municipalityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 400, 170, 30));

        registerBarangayLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        registerBarangayLabel.setForeground(new java.awt.Color(255, 255, 255));
        registerBarangayLabel.setText("Barangay:");
        registerMainPanel.add(registerBarangayLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 400, 170, 30));

        registerAddressCityTownCombox.setBackground(new java.awt.Color(71, 74, 73));
        registerAddressCityTownCombox.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        registerAddressCityTownCombox.setForeground(new java.awt.Color(255, 255, 255));
        registerAddressCityTownCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Agdangan", "Padre Burgos", "Unisan" }));
        registerAddressCityTownCombox.setBorder(null);
        registerAddressCityTownCombox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                registerAddressCityTownComboxItemStateChanged(evt);
            }
        });
        registerMainPanel.add(registerAddressCityTownCombox, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 430, 170, 40));

        registerFirstNameField.setCaretColor(new java.awt.Color(255, 255, 255));
        registerFirstNameField.setPrefixIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-name-20.png"))); // NOI18N
        registerFirstNameField.setSelectedTextColor(new java.awt.Color(28, 33, 32));
        registerMainPanel.add(registerFirstNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 170, -1));

        registerLastNameField.setCaretColor(new java.awt.Color(255, 255, 255));
        registerLastNameField.setPrefixIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-name-20.png"))); // NOI18N
        registerLastNameField.setSelectedTextColor(new java.awt.Color(28, 33, 32));
        registerMainPanel.add(registerLastNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, 170, -1));

        registerEmailField.setCaretColor(new java.awt.Color(255, 255, 255));
        registerEmailField.setPrefixIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-email-20.png"))); // NOI18N
        registerEmailField.setSelectedTextColor(new java.awt.Color(28, 33, 32));
        registerMainPanel.add(registerEmailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 490, 360, -1));

        registerPasswordField.setCaretColor(new java.awt.Color(255, 255, 255));
        registerPasswordField.setPrefixIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-password-20.png"))); // NOI18N
        registerPasswordField.setSelectedTextColor(new java.awt.Color(28, 33, 32));
        registerMainPanel.add(registerPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 550, 170, -1));

        registerConfirmPasswordField.setCaretColor(new java.awt.Color(255, 255, 255));
        registerConfirmPasswordField.setPrefixIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-mobile-shop-log-out-20.png"))); // NOI18N
        registerConfirmPasswordField.setSelectedTextColor(new java.awt.Color(28, 33, 32));
        registerMainPanel.add(registerConfirmPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 550, 170, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/votinglogo2.png"))); // NOI18N
        registerMainPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 80, 70));

        jLabel2.setFont(new java.awt.Font("Poppins", 1, 34)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("VOTING");
        registerMainPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 150, 30));

        jLabel3.setFont(new java.awt.Font("Poppins", 1, 34)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("SYSTEM");
        registerMainPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 150, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registerMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registerMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void registerStatusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerStatusComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registerStatusComboBoxActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        Login loginPage = new Login();
        loginPage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_loginButtonActionPerformed

    private void showPasswordCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPasswordCheckBoxActionPerformed
        // TODO add your handling code here:
        if(showPasswordCheckBox.isSelected()){
            registerPasswordField.setEchoChar((char)0);
            registerConfirmPasswordField.setEchoChar((char)0);
        }
        else{
            registerPasswordField.setEchoChar('*');
            registerConfirmPasswordField.setEchoChar('*');
        }
    }//GEN-LAST:event_showPasswordCheckBoxActionPerformed

    private void registerBirthdateChooserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_registerBirthdateChooserPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_registerBirthdateChooserPropertyChange

    private void registerAddressCityTownComboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_registerAddressCityTownComboxItemStateChanged
        // TODO add your handling code here:
        registerAddressBarangayCombox.removeAllItems();
        LocationHandler locationHandler = new LocationHandler();
        if (registerAddressCityTownCombox.getSelectedItem().equals("Default")) {
            registerAddressBarangayCombox.addItem("Default");
        } else if(registerAddressCityTownCombox.getSelectedItem().equals("Agdangan")){
            for (String barangayLocation : locationHandler.getAgdanganBarangay()) {
                registerAddressBarangayCombox.addItem(barangayLocation);
            }
        } else if (registerAddressCityTownCombox.getSelectedItem().equals("Unisan")) {
            for (String barangaLocation : locationHandler.getUnisanBarangay()) {
                registerAddressBarangayCombox.addItem(barangaLocation);
            }
        } else if (registerAddressCityTownCombox.getSelectedItem().equals("Padre Burgos")) {
            for (String barangaLocation : locationHandler.getPadreBurgosBarangay()) {
                registerAddressBarangayCombox.addItem(barangaLocation);
            }
        }
    }//GEN-LAST:event_registerAddressCityTownComboxItemStateChanged

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        char[] password1 = registerPasswordField.getPassword();
        java.util.Date birth_date = registerBirthdateChooser.getDate();
        
        if(validateForm()){
            UserTransferObject registerUser = new UserTransferObject();
            UserAccessObject accessRegister = new UserAccessObject();
            
            registerUser.setFirstname(registerFirstNameField.getText());
            registerUser.setLastname(registerLastNameField.getText());
            registerUser.setBirthDate(new java.sql.Date(birth_date.getTime()));
            registerUser.setGender(registerGenderComboBox.getSelectedItem().toString());
            registerUser.setStatus(registerStatusComboBox.getSelectedItem().toString());
            registerUser.setMunicipality(registerAddressCityTownCombox.getSelectedItem().toString());
            registerUser.setBarangay(registerAddressBarangayCombox.getSelectedItem().toString());
            registerUser.setPassword(String.valueOf(password1));
            registerUser.setEmail(registerEmailField.getText());
            registerUser.setRole("voter");
            
            if(accessRegister.registerUser(registerUser)){
                JOptionPane.showMessageDialog(registerMainPanel, "You have been registered successfully!", "Success!", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        

    }//GEN-LAST:event_registerButtonActionPerformed
    
    public boolean validateForm() {
        UserAccessObject userAccessObject = new UserAccessObject();
        
        // Check for empty fields
        if (registerFirstNameField.getText().isEmpty() ||
            registerLastNameField.getText().isEmpty() ||
            registerEmailField.getText().isEmpty() ||
            registerBirthdateChooser.getDate() == null ||
            registerGenderComboBox.getSelectedItem().equals("Default") ||
            registerStatusComboBox.getSelectedItem().equals("Default") ||
            registerAddressCityTownCombox.getSelectedItem().equals("Default") ||
            registerAddressBarangayCombox.getSelectedItem().equals("Default") ||
            registerPasswordField.getPassword().length == 0 ||
            registerConfirmPasswordField.getPassword().length == 0) {
            
            JOptionPane.showMessageDialog(registerMainPanel, "Please fill in all the required fields.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Check if age is below 18
        if (registerBirthdateChooser.getDate() != null) {
            // Get the current date
            Calendar currentDate = Calendar.getInstance();

            // Get the selected date
            Calendar selectedCalendar = Calendar.getInstance();
            selectedCalendar.setTime(registerBirthdateChooser.getDate());

            // Calculate the age
            int age = currentDate.get(Calendar.YEAR) - selectedCalendar.get(Calendar.YEAR);
            if (currentDate.get(Calendar.DAY_OF_YEAR) < selectedCalendar.get(Calendar.DAY_OF_YEAR)) {
                age--;
            }
            
            if (age < 18 ){
                JOptionPane.showMessageDialog(registerMainPanel, "Age below 18 cannot register.", "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        

        // Check if the email already exists (you need to implement this part based on your backend/database logic)
        if (userAccessObject.emailExists(registerEmailField.getText())) {
            JOptionPane.showMessageDialog(registerMainPanel, "Email already exists. Please use a different email.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Check if passwords match
        char[] password1 = registerPasswordField.getPassword();
        char[] password2 = registerConfirmPasswordField.getPassword();

        if (!String.valueOf(password1).equals(String.valueOf(password2))) {
            JOptionPane.showMessageDialog(registerMainPanel, "Passwords do not match.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Validation successful
        return true;
    }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatLightLaf.setup();
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Register().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel birthdayLabel;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel municipalityLabel;
    private javax.swing.JComboBox<String> registerAddressBarangayCombox;
    private javax.swing.JComboBox<String> registerAddressCityTownCombox;
    private javax.swing.JLabel registerBarangayLabel;
    private com.toedter.calendar.JDateChooser registerBirthdateChooser;
    private javax.swing.JButton registerButton;
    private CustomTextField.MyPasswordField registerConfirmPasswordField;
    private CustomTextField.MyTextField registerEmailField;
    private CustomTextField.MyTextField registerFirstNameField;
    private javax.swing.JComboBox<String> registerGenderComboBox;
    private CustomTextField.MyTextField registerLastNameField;
    private javax.swing.JPanel registerMainPanel;
    private CustomTextField.MyPasswordField registerPasswordField;
    private javax.swing.JComboBox<String> registerStatusComboBox;
    private javax.swing.JCheckBox showPasswordCheckBox;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}
