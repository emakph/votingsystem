/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CustomChart;

import DataFiles.DatabaseConnector;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author REYMARK
 */
public class Test extends javax.swing.JFrame {

    /**
     * Creates new form Test
     */
    public Test() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pollsLabel = new javax.swing.JLabel();
        pollsCombox = new javax.swing.JComboBox<>();
        pieChart1 = new CustomChart.PieChart();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pollsLabel.setText("POLLS");

        pollsCombox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pollsComboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(635, Short.MAX_VALUE)
                .addComponent(pollsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pollsCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pieChart1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pollsLabel)
                    .addComponent(pollsCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pieChart1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try{
            DatabaseConnector.getConnection();
            showPolls();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Errorr in formwindowopened");
        }
    }//GEN-LAST:event_formWindowOpened

    private void pollsComboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pollsComboxActionPerformed
        // TODO add your handling code here:
        if(pollsCombox.getSelectedIndex() >= 0){
            showData(pollsCombox.getSelectedItem().toString());
            //JOptionPane.showMessageDialog(null, pollsCombox.getSelectedItem().toString());
        }
    }//GEN-LAST:event_pollsComboxActionPerformed

    private void showPolls() throws SQLException {
        
        ResultSet rs;
        try (PreparedStatement pstmt = DatabaseConnector.getConnection().prepareStatement("SELECT municipality FROM users ORDER BY user_id")) {
            rs = pstmt.executeQuery();
            while(rs.next()) {
                String title = rs.getString("municipality");
                pollsCombox.addItem(title);
            }
        }
        rs.close();
    }
    
    private void showData(String title){
        try{
            pieChart1.clearData();
            String sql = """
                     SELECT p.title AS poll_title, CONCAT(o.lastname, ', ', o.firstname) AS candidate_name, COUNT(v.vote_id) AS vote_count
                     FROM Options o
                     JOIN Polls p ON o.poll_id = p.poll_id
                     LEFT JOIN Votes v ON o.option_id = v.option_id
                     WHERE p.title = ?
                     GROUP BY p.title, CONCAT(o.lastname, ', ', o.firstname)""";
            PreparedStatement pstmt = DatabaseConnector.getConnection().prepareStatement(sql);
            pstmt.setString(1, title);
            ResultSet rs = pstmt.executeQuery();
            int index=0;
            while(rs.next()){
                String candidate_title = rs.getString("candidate_name");
                int vote_count = rs.getInt("vote_count");
                pieChart1.addData(new ModelPieChart(candidate_title, vote_count, getColor(index++)));
            }
        } catch(SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error in showData method. File : Test.java" + ex);
        }
    }
    
    private Color getColor(int index){
        Color[] color = new Color[]{new Color(204,204,255), new Color(153,153,255), new Color(255,204,255), new Color(255,51,255), new Color(255,204,255), new Color(204,255,204)};
        return color[index];
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Test().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private CustomChart.PieChart pieChart1;
    private javax.swing.JComboBox<String> pollsCombox;
    private javax.swing.JLabel pollsLabel;
    // End of variables declaration//GEN-END:variables
}
